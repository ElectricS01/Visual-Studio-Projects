<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vnjjj0c+eeWXZ755558XPiAAOw==
</value>
  </data>
</root>